Time Complexity - > O(n)
Space Complexity -> O(n) for stack
#Can we solved using iterative DFS, BFS or recursion
DFS iterative - check at each step if val exists and is same

class Solution:
  def is_same(self, p, q):

    stack = [(p, q)]
    while(stack):
      p,q = stack.pop()
      if p is None and q is None:
        continue
      if p is None or q is None:
        return False

      if p.val != q.val:
        return False
      stack.append(p.right, q.right)
      stack.append(p.left, q.left)
    return True
